-- Database: csinterviewquestions

-- DROP DATABASE csinterviewquestions;

CREATE DATABASE csinterviewquestions
    WITH 
    OWNER = postgres
    ENCODING = 'SQL_ASCII'
    LC_COLLATE = 'C'
    LC_CTYPE = 'C'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1;

ALTER DATABASE csinterviewquestions
    SET search_path TO public;
ALTER ROLE postgres IN DATABASE csinterviewquestions
    SET search_path TO public;

GRANT ALL ON DATABASE csinterviewquestions TO postgres;

GRANT TEMPORARY, CONNECT ON DATABASE csinterviewquestions TO PUBLIC;

-----------------------------------------
-- Table: public.users

-- DROP TABLE public.users;

CREATE TABLE public.users (
	email text NOT NULL,
	banned bool NOT NULL DEFAULT false,
	refresh_token text NULL,
	ip _inet NOT NULL,
	pin text NULL,
	username text NOT NULL,
	CONSTRAINT users_email_pk PRIMARY KEY (email),
	CONSTRAINT users_username_uq UNIQUE (username)
);

TABLESPACE pg_default;

ALTER TABLE public.users
    OWNER to postgres;

-----------------------------------------
-- Table: public.posts

-- DROP TABLE public.posts;

CREATE TABLE public.posts (
	id int4 NOT NULL GENERATED ALWAYS AS IDENTITY,
	title text NOT NULL,
	create_date date NOT NULL,
	interview_date date NOT NULL,
	company text NOT NULL,
	body text NULL,
	"position" text NOT NULL,
	votes_up int4 NOT NULL DEFAULT 0,
	votes_down int4 NOT NULL DEFAULT 0,
	"views" int4 NOT NULL DEFAULT 0,
	status text NOT NULL,
	pin text NOT NULL,
	CONSTRAINT posts_id_pk PRIMARY KEY (id)
);

TABLESPACE pg_default;

ALTER TABLE public.posts
    OWNER to postgres;

-----------------------------------------
-- Table: public.post_reports

-- DROP TABLE public.post_reports;

CREATE TABLE public.post_reports (
	id int4 NOT NULL GENERATED ALWAYS AS IDENTITY,
	post_id int4 NOT NULL,
	body text NOT NULL,
	create_date date NOT NULL,
	status text NOT NULL,
	email text NOT NULL,
	ip inet NOT NULL,
	CONSTRAINT post_reports_id_pk PRIMARY KEY (id),
	CONSTRAINT post_report_post_id_fk FOREIGN KEY (post_id) REFERENCES public.posts(id)
);

TABLESPACE pg_default;

ALTER TABLE public.post_reports
    OWNER to postgres;

-----------------------------------------
-- Table: public.post_files

-- DROP TABLE public.post_files;

CREATE TABLE public.post_files (
	id int4 NOT NULL GENERATED ALWAYS AS IDENTITY,
	post_id int4 NOT NULL,
	file_url text NOT NULL,
	CONSTRAINT post_files_file_url_uq UNIQUE (file_url),
	CONSTRAINT post_files_id_pk PRIMARY KEY (id),
	CONSTRAINT post_files_post_id_fk FOREIGN KEY (post_id) REFERENCES public.posts(id)
);

TABLESPACE pg_default;

ALTER TABLE public.post_files
    OWNER to postgres;

-----------------------------------------
-- Table: public.comments

-- DROP TABLE public.comments;

CREATE TABLE public."comments" (
	id int4 NOT NULL GENERATED ALWAYS AS IDENTITY,
	post_id int4 NOT NULL,
	create_date date NOT NULL,
	body text NOT NULL,
	solution bool NOT NULL DEFAULT false,
	votes_up int4 NOT NULL DEFAULT 0,
	votes_down int4 NOT NULL DEFAULT 0,
	status text NOT NULL,
	username text NOT NULL,
	CONSTRAINT comments_id_pk PRIMARY KEY (id),
	CONSTRAINT comments_post_id_fk FOREIGN KEY (post_id) REFERENCES public.posts(id),
	CONSTRAINT comments_username_fk FOREIGN KEY (username) REFERENCES public.users(username)
);

TABLESPACE pg_default;

ALTER TABLE public.comments
    OWNER to postgres;

-----------------------------------------
-- Table: public.comment_reports

-- DROP TABLE public.comment_reports;

CREATE TABLE public.comment_reports (
	id int4 NOT NULL,
	comment_id int4 NOT NULL,
	body text NOT NULL,
	create_date date NOT NULL,
	status text NOT NULL,
	email text NOT NULL,
	ip inet NOT NULL,
	CONSTRAINT comment_report_id_pk PRIMARY KEY (id),
	CONSTRAINT comment_report_comment_id_fk FOREIGN KEY (comment_id) REFERENCES public."comments"(id)
);

TABLESPACE pg_default;

ALTER TABLE public.comment_reports
    OWNER to postgres;

-----------------------------------------
-- Table: public.comment_files

-- DROP TABLE public.comment_files;

CREATE TABLE public.comment_files (
	id int4 NOT NULL GENERATED ALWAYS AS IDENTITY,
	comment_id int4 NOT NULL,
	file_url text NOT NULL,
	CONSTRAINT comment_files_file_url_uq UNIQUE (file_url),
	CONSTRAINT comment_files_id_pk PRIMARY KEY (id),
	CONSTRAINT comment_files_comment_id_fk FOREIGN KEY (comment_id) REFERENCES public."comments"(id)
);

TABLESPACE pg_default;

ALTER TABLE public.comment_files
    OWNER to postgres;
